{"version":3,"sources":["Main.tsx","services/comment.service.mock.tsx","services/post.service.mock.tsx","services/api.tsx","services/async.tsx","component/List.tsx","SdieNav.tsx","Header.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Main","className","src","comments","id","content","createdBy","createdAt","updatedAt","CommentServiceMock","getComments","Promise","resolve","getComment","foundComment","find","comment","writeComment","updateComment","deleteComment","posts","title","initial","post","getPosts","setTimeout","getPost","foundPost","writePost","push","updatePost","foundIndex","findIndex","_","assign","deletePost","splice","AndyContext","createContext","asyncReducer","state","action","type","loading","data","error","useAsync","promiseFn","useReducer","dispatch","run","a","styleCss","css","List","props","andy","useContext","asyncEffectState","params","deps","useEffect","useAsyncEffect","confirmDelete","postId","window","confirm","then","success","map","idx","onClick","SideNav","menus","name","component","useState","setContent","style","display","height","width","padding","borderRight","menu","index","marginBottom","children","Header","backgroundColor","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAaeA,MAVf,WAEE,OACE,sBAAKC,UAAU,OAAf,6BAEE,qBAAKC,IAAK,4G,eCNVC,EAAsB,CAC1B,CACEC,GAAI,EACJC,QAAS,8BACTC,UAAW,2CACXC,UAAW,sBACXC,UAAW,uBAEX,CACAJ,GAAI,EACJC,QAAS,8BACTC,UAAW,2CACXC,UAAW,sBACXC,UAAW,uBAEX,CACAJ,GAAI,EACJC,QAAS,8BACTC,UAAW,2CACXC,UAAW,sBACXC,UAAW,uBAEX,CACAJ,GAAI,EACJC,QAAS,8BACTC,UAAW,2CACXC,UAAW,sBACXC,UAAW,uBAEX,CACAJ,GAAI,EACJC,QAAS,8BACTC,UAAW,2CACXC,UAAW,sBACXC,UAAW,uBAEX,CACAJ,GAAI,EACJC,QAAS,8BACTC,UAAW,2CACXC,UAAW,sBACXC,UAAW,uBAEX,CACAJ,GAAI,EACJC,QAAS,8BACTC,UAAW,2CACXC,UAAW,sBACXC,UAAW,uBAEX,CACAJ,GAAI,EACJC,QAAS,8BACTC,UAAW,2CACXC,UAAW,sBACXC,UAAW,wBAKFC,EAAqB,CAChCC,YAAa,WACX,OAAOC,QAAQC,QAAQT,IAEzBU,WAAY,SAACT,GACX,IAAMU,EAAoCX,EAASY,MAAK,SAACC,GACvD,OAAOA,EAAQZ,KAAOA,KAExB,OAAOO,QAAQC,QAAQE,IAEzBG,aAAc,SAACD,GACb,OAAOL,QAAQC,QAAQ,IAEzBM,cAAe,SAACd,EAAYY,GAC1B,OAAOL,QAAQC,QAAQ,IAEzBO,cAAe,SAACf,GACd,OAAOO,QAAQC,QAAQ,K,iBC3ErBQ,EAAgB,CACpB,CACEhB,GAAI,EACJiB,MAAO,uBACPhB,QAAS,oCACTC,UAAW,2CACXC,UAAW,sBACXC,UAAW,uBAEX,CACAJ,GAAI,EACJiB,MAAO,uBACPhB,QAAS,oCACTC,UAAW,2CACXC,UAAW,sBACXC,UAAW,uBAEX,CACAJ,GAAI,EACJiB,MAAO,uBACPhB,QAAS,oCACTC,UAAW,2CACXC,UAAW,sBACXC,UAAW,uBAEX,CACAJ,GAAI,EACJiB,MAAO,uBACPhB,QAAS,oCACTC,UAAW,2CACXC,UAAW,sBACXC,UAAW,uBAEX,CACAJ,GAAI,EACJiB,MAAO,uBACPhB,QAAS,oCACTC,UAAW,2CACXC,UAAW,sBACXC,UAAW,uBAEX,CACAJ,GAAI,EACJiB,MAAO,uBACPhB,QAAS,oCACTC,UAAW,2CACXC,UAAW,sBACXC,UAAW,uBAEX,CACAJ,GAAI,EACJiB,MAAO,uBACPhB,QAAS,oCACTC,UAAW,2CACXC,UAAW,sBACXC,UAAW,uBAEX,CACAJ,GAAI,EACJiB,MAAO,uBACPhB,QAAS,oCACTC,UAAW,2CACXC,UAAW,sBACXC,UAAW,wBC7DTc,EAAuB,CAC3BC,KDgE6B,CAC7BC,SAAU,WAMR,OALiC,IAAIb,SAAQ,SAAAC,GAC3Ca,YAAW,WACTb,EAAQQ,KACP,SAIPM,QAAS,SAACtB,GACR,IAAMuB,EAA8BP,EAAML,MAAK,SAACQ,GAC9C,OAAOA,EAAKnB,KAAOA,KAIrB,OAAOO,QAAQC,QAAQe,IAEzBC,UAAW,SAACL,GAEV,OADAH,EAAMS,KAAKN,GACJZ,QAAQC,QAAQ,IAEzBkB,WAAY,SAAC1B,EAAYmB,GACvB,IAAMI,EAA8BP,EAAML,MAAK,SAACQ,GAC9C,OAAOA,EAAKnB,KAAOA,KAGf2B,EAAqBX,EAAMY,WAAU,SAACT,GAC1C,OAAOA,EAAKnB,KAAOA,KAMrB,OAHAgB,EAAMW,GAAcE,IAAEC,OAAOP,EAAWJ,GAGjCZ,QAAQC,QAAQ,IAEzBuB,WAAY,SAAC/B,GACX,IAAM2B,EAAqBX,EAAMY,WAAU,SAACT,GAC1C,OAAOA,EAAKnB,KAAOA,KAGrB,OAAoB,IAAhB2B,GACFX,EAAMgB,OAAOL,EAAY,GAClBpB,QAAQC,QAAQ,IAEhBD,QAAQC,QAAQ,KC3G3BI,QAASP,GAGE4B,EAAcC,wBAA2BhB,G,gCCmBtD,SAASiB,EACPC,EACAC,GAEA,OAAQA,EAAOC,MACb,IAAK,UACH,MAAO,CACLC,SAAS,EACTC,KAAM,KACNC,MAAO,MAEX,IAAK,UACH,MAAO,CACLF,SAAS,EACTC,KAAMH,EAAOG,KACbC,MAAO,MAEX,IAAK,QACH,MAAO,CACLF,SAAS,EACTC,KAAM,KACNC,MAAOJ,EAAOI,QAQtB,SAASC,EAAuCC,GAA0B,IAAD,EAC7CC,qBAAWT,EAAc,CACjDI,SAAS,EACTC,KAAM,KACNC,MAAO,OAJ8D,mBAChEL,EADgE,KACzDS,EADyD,cAOxDC,IAPwD,2EAOvE,wCAAAC,EAAA,6DACEF,EAAS,CAACP,KAAM,YADlB,kBAGuBK,EAAS,WAAT,KAHvB,OAGUH,EAHV,OAIIK,EAAS,CACPP,KAAM,UACNE,SANN,gDASIK,EAAS,CACPP,KAAM,QACNG,MAAM,EAAD,KAXX,0DAPuE,sBAwBvE,MAAO,CAACL,EAAOU,G,6cCtEjB,IAAME,EAAWC,YAAH,KAoBDC,EAAO,SAACC,GACnB,IAAMC,EFtBkCC,qBAAwBpB,GEkC1DqB,EDwCR,SACEX,EACAY,EACAC,GACC,IAAD,EACqBd,EAAkBC,GADvC,mBACOP,EADP,KACcU,EADd,KASA,OAPAW,qBACE,WACEX,EAAG,WAAH,cAAOS,MAETC,GAGK,CACLpB,MAAOA,EACPU,IAAKA,GCvDsEY,CAAiDN,EAAKjC,KAAKC,SAAU,GAAI,IAgBtJ,SAASuC,EAAcC,GACjBC,OAAOC,QAAQ,6DAfF,SAACF,GAClBR,EAAKjC,KAAKY,WAAW6B,GAClBG,MAAK,SAACC,GACLV,EAAiBR,SAanBf,CAAW6B,GAIf,OAAKN,EAAiBlB,MAClBkB,EAAiBlB,MAAMG,QAAgB,qCACvCe,EAAiBlB,MAAMK,MAAc,gCACpCa,EAAiBlB,MAAMI,KAG1B,mBAAK3C,UAAU,OAAOoD,IAAK,CAACD,IACzBM,EAAiBlB,OAASkB,EAAiBlB,MAAMI,MAAQc,EAAiBlB,MAAMI,KAAKyB,KAAI,SAAC9C,EAAY+C,GACrG,OACE,mBAAKrE,UAAW,aACd,uBAAMsB,EAAKF,OACX,sBAAQkD,QAAS,WACNhD,EAAKnB,KADhB,6BAIA,uDACA,sBAAQmE,QAAS,WACfR,EAAcxC,EAAKnB,MADrB,2BAb+B,KAHL,MCHvBoE,MAvDf,SAAiBjB,GACf,IAAIkB,EAAQ,CACV,CACEC,KAAM,eACNC,UAAW,cAAC,EAAD,KAEb,CACED,KAAM,qBACNC,UAAW,cAAC,EAAD,MARqB,EAUTC,mBAAS,cAAC,EAAD,KAVA,mBAU/BvE,EAV+B,KAUtBwE,EAVsB,KAWpC,OACE,sBAAK5E,UAAU,UAAU6E,MACvB,CACEC,QAAS,OACTC,OAAQ,SAHZ,UAME,qBAAKF,MACH,CACEG,MAAO,MACPC,QAAS,OACTC,YAAa,qBAJjB,SAOGV,EAAMJ,KAAI,SAACe,EAAMC,GAChB,OAAO,wBAELd,QAAS,WACPM,EAAWO,EAAKT,YAElBG,MACE,CACEQ,aAAc,QAPb,SAULF,EAAKV,MATAW,QAYX,qBAAKP,MACH,CACEG,MAAO,QAFX,SAKE,gCACG1B,EAAMgC,SACNlF,WCpCImF,MAjBf,WACE,OACE,qBAAKvF,UAAU,SACV6E,MACE,CACEG,MAAO,OACPQ,gBAAkB,UAClBT,OAAQ,SALjB,SAQE,kDCGSU,MAVf,WACE,OACE,qBAAKzF,UAAU,MAAf,SACE,cAAC,EAAD,UACE,cAAC,EAAD,SCIO0F,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2eb8dccd.chunk.js","sourcesContent":["import React from 'react';\n\n\nfunction Main() {\n\n  return (\n    <div className=\"Main\">\n      메인!!!!\n      <img src={\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSpDGAPrAz18NxUDtH7JbIQjPt65wA2Cwol1g&usqp=CAU\"}/>\n    </div>\n  );\n}\n\nexport default Main;\n","import {Comment} from \"../object-model/model\";\n\nconst comments: Comment[] = [\n  {\n    id: 1,\n    content: \"댓글 1 내용\",\n    createdBy: \"Andy the 투명 드래곤\",\n    createdAt: \"2021-02-16 00:00:00\",\n    updatedAt: \"2021-02-16 00:00:00\",\n  }\n  , {\n    id: 2,\n    content: \"댓글 2 내용\",\n    createdBy: \"Andy the 투명 드래곤\",\n    createdAt: \"2021-02-16 00:00:00\",\n    updatedAt: \"2021-02-16 00:00:00\",\n  }\n  , {\n    id: 3,\n    content: \"댓글 3 내용\",\n    createdBy: \"Andy the 투명 드래곤\",\n    createdAt: \"2021-02-16 00:00:00\",\n    updatedAt: \"2021-02-16 00:00:00\",\n  }\n  , {\n    id: 4,\n    content: \"댓글 4 내용\",\n    createdBy: \"Andy the 투명 드래곤\",\n    createdAt: \"2021-02-16 00:00:00\",\n    updatedAt: \"2021-02-16 00:00:00\",\n  }\n  , {\n    id: 5,\n    content: \"댓글 5 내용\",\n    createdBy: \"Andy the 투명 드래곤\",\n    createdAt: \"2021-02-16 00:00:00\",\n    updatedAt: \"2021-02-16 00:00:00\",\n  }\n  , {\n    id: 6,\n    content: \"댓글 6 내용\",\n    createdBy: \"Andy the 투명 드래곤\",\n    createdAt: \"2021-02-16 00:00:00\",\n    updatedAt: \"2021-02-16 00:00:00\",\n  }\n  , {\n    id: 7,\n    content: \"댓글 7 내용\",\n    createdBy: \"Andy the 투명 드래곤\",\n    createdAt: \"2021-02-16 00:00:00\",\n    updatedAt: \"2021-02-16 00:00:00\",\n  }\n  , {\n    id: 8,\n    content: \"댓글 8 내용\",\n    createdBy: \"Andy the 투명 드래곤\",\n    createdAt: \"2021-02-16 00:00:00\",\n    updatedAt: \"2021-02-16 00:00:00\",\n  }\n];\n\n\nexport const CommentServiceMock = {\n  getComments: () => {\n    return Promise.resolve(comments)\n  },\n  getComment: (id: number) => {\n    const foundComment: Comment | undefined = comments.find((comment: Comment) => {\n      return comment.id === id\n    })\n    return Promise.resolve(foundComment)\n  },\n  writeComment: (comment: Comment) => {\n    return Promise.resolve(1);\n  },\n  updateComment: (id: number, comment: Comment) => {\n    return Promise.resolve(1);\n  },\n  deleteComment: (id: number) => {\n    return Promise.resolve(1);\n  }\n}\n","import {Post} from \"../object-model/model\";\nimport _ from \"lodash\";\n\n\nconst posts: Post[] = [\n  {\n    id: 0,\n    title: \"게시글 0\",\n    content: \"게시글 0 내용\",\n    createdBy: \"Andy the 투명 드래곤\",\n    createdAt: \"2021-02-16 00:00:00\",\n    updatedAt: \"2021-02-16 00:00:00\",\n  }\n  , {\n    id: 1,\n    title: \"게시글 1\",\n    content: \"게시글 1 내용\",\n    createdBy: \"Andy the 투명 드래곤\",\n    createdAt: \"2021-02-16 00:00:00\",\n    updatedAt: \"2021-02-16 00:00:00\",\n  }\n  , {\n    id: 2,\n    title: \"게시글 2\",\n    content: \"게시글 2 내용\",\n    createdBy: \"Andy the 투명 드래곤\",\n    createdAt: \"2021-02-16 00:00:00\",\n    updatedAt: \"2021-02-16 00:00:00\",\n  }\n  , {\n    id: 3,\n    title: \"게시글 3\",\n    content: \"게시글 3 내용\",\n    createdBy: \"Andy the 투명 드래곤\",\n    createdAt: \"2021-02-16 00:00:00\",\n    updatedAt: \"2021-02-16 00:00:00\",\n  }\n  , {\n    id: 4,\n    title: \"게시글 4\",\n    content: \"게시글 4 내용\",\n    createdBy: \"Andy the 투명 드래곤\",\n    createdAt: \"2021-02-16 00:00:00\",\n    updatedAt: \"2021-02-16 00:00:00\",\n  }\n  , {\n    id: 5,\n    title: \"게시글 5\",\n    content: \"게시글 5 내용\",\n    createdBy: \"Andy the 투명 드래곤\",\n    createdAt: \"2021-02-16 00:00:00\",\n    updatedAt: \"2021-02-16 00:00:00\",\n  }\n  , {\n    id: 6,\n    title: \"게시글 6\",\n    content: \"게시글 6 내용\",\n    createdBy: \"Andy the 투명 드래곤\",\n    createdAt: \"2021-02-16 00:00:00\",\n    updatedAt: \"2021-02-16 00:00:00\",\n  }\n  , {\n    id: 7,\n    title: \"게시글 7\",\n    content: \"게시글 7 내용\",\n    createdBy: \"Andy the 투명 드래곤\",\n    createdAt: \"2021-02-16 00:00:00\",\n    updatedAt: \"2021-02-16 00:00:00\",\n  }\n];\n\nexport const PostServiceMock = {\n  getPosts: () => {\n    const promise: Promise<Post[]> = new Promise(resolve=>{\n      setTimeout(()=>{\n        resolve(posts);\n      }, 500);\n    });\n    return promise;\n  },\n  getPost: (id: number) => {\n    const foundPost: Post | undefined = posts.find((post: Post) => {\n      return post.id === id\n    });\n\n\n    return Promise.resolve(foundPost);\n  },\n  writePost: (post: Post) => {\n    posts.push(post);\n    return Promise.resolve(1);\n  },\n  updatePost: (id: number, post: Post) => {\n    const foundPost: Post | undefined = posts.find((post: Post) => {\n      return post.id === id\n    });\n\n    const foundIndex: number = posts.findIndex((post: Post) => {\n      return post.id === id\n    });\n\n    posts[foundIndex] = _.assign(foundPost, post);\n\n\n    return Promise.resolve(1);\n  },\n  deletePost: (id: number) => {\n    const foundIndex: number = posts.findIndex((post: Post) => {\n      return post.id === id\n    });\n\n    if (foundIndex !== -1) {\n      posts.splice(foundIndex, 1);\n      return Promise.resolve(1);\n    } else {\n      return Promise.resolve(0);\n    }\n  }\n}\n","import React, {createContext, useContext} from 'react';\nimport {CommentServiceMock} from \"./comment.service.mock\";\nimport {PostServiceMock} from \"./post.service.mock\";\nimport {AndyService} from \"../object-model/model\";\n\n\nconst initial: AndyService = {\n  post: PostServiceMock,\n  comment: CommentServiceMock,\n};\n\nexport const AndyContext = createContext<AndyService>(initial);\nexport const useAndy = (): AndyService => useContext<AndyService>(AndyContext);\n\ntype AndyProviderProps = {\n  andy: AndyService;\n  children: JSX.Element | JSX.Element[];\n};\n\nexport const AndyProvider = (props: AndyProviderProps): JSX.Element => {\n  let andy: AndyService = useContext(AndyContext);\n\n  if (props.andy !== andy) {\n    andy = props.andy || null;\n  }\n\n  return <AndyContext.Provider value={andy}>{props.children}</AndyContext.Provider>;\n};\n","import {useReducer, useEffect} from 'react';\n\ntype LoadingAction = {\n  type: 'LOADING';\n};\n\ntype SuccessAction<T> = {\n  type: 'SUCCESS';\n  data: T;\n};\n\ntype ErrorAction<T> = {\n  type: 'ERROR';\n  error: T;\n};\n\ntype AsyncAction<D, E> = LoadingAction | SuccessAction<D> | ErrorAction<E>;\n\nexport type AsyncState<D, E> = {\n  loading: boolean;\n  data: D | null;\n  error: E | null;\n};\n\nexport type AsyncEffectState<D, E, F> = {\n  state: AsyncState<D, E>;\n  run: (...params: []) => void;\n};\n\n\nfunction asyncReducer<D, E>(\n  state: AsyncState<D, E>,\n  action: AsyncAction<D, E>\n): AsyncState<D, E> {\n  switch (action.type) {\n    case 'LOADING':\n      return {\n        loading: true,\n        data: null,\n        error: null\n      };\n    case 'SUCCESS':\n      return {\n        loading: false,\n        data: action.data,\n        error: null\n      };\n    case 'ERROR':\n      return {\n        loading: false,\n        data: null,\n        error: action.error\n      };\n  }\n}\n\nexport type PromiseFn<T> = (...args: T[]) => Promise<T>;\n\n\nfunction useAsync<D, E, F extends PromiseFn<D>>(promiseFn: F, deps = []) {\n  const [state, dispatch] = useReducer(asyncReducer, {\n    loading: false,\n    data: null,\n    error: null\n  } as AsyncState<D, E>);\n\n  async function run(...params: Parameters<F>) {\n    dispatch({type: 'LOADING'});\n    try {\n      const data = await promiseFn(...params);\n      dispatch({\n        type: 'SUCCESS',\n        data\n      });\n    } catch (e) {\n      dispatch({\n        type: 'ERROR',\n        error: e\n      });\n    }\n  }\n\n\n  return [state, run] as const;\n}\n\nfunction useAsyncEffect<D, E, F extends PromiseFn<D>>(\n  promiseFn: F,\n  params: Parameters<F>,\n  deps: []\n) {\n  const [state, run] = useAsync<D, E, F>(promiseFn);\n  useEffect(\n    () => {\n      run(...params);\n    },\n    deps\n  );\n\n  return {\n    state: state,\n    run: run\n  } as AsyncEffectState<D, E, F>;\n}\n\nexport default useAsync;\nexport {useAsyncEffect};\n","import React from 'react';\n\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport {jsx, css} from '@emotion/react';\n\nimport {useAndy} from \"../services/api\";\nimport {Post} from \"../object-model/model\";\nimport {AsyncEffectState, PromiseFn, useAsyncEffect} from \"../services/async\";\n\nexport interface ListProps {\n}\n\nconst styleCss = css`\n        display: flex;\n        flex-direction:  column;\n        align-items: center;\n        margin-top: 10px;\n        .post-item{\n          width: 80%;\n          display: flex;\n          border: solid 1px black;\n          justify-content: center;\n          padding: 10px;\n          margin-top: 10px;\n          button {\n            margin-left: 10px;\n          }\n        }\n  `;\n\nconst pubUrl = process.env.PUBLIC_URL;\n\nexport const List = (props: ListProps) => {\n  const andy = useAndy()\n  // const history = useHistory();\n\n  // const posts = useAsync({promiseFn: andy.post.getPosts})\n  //\n  //\n\n  //\n  // if (posts.isPending) return <div>Loading...</div>\n  // if (posts.error) return <div>Something went wrong: ${posts.error.message}</div>\n  // if (!posts.data) return (<div>게시글이 없습니다.</div>)\n\n  const asyncEffectState: AsyncEffectState<Post[], Error, PromiseFn<Post[]>> = useAsyncEffect<Post[], Error, PromiseFn<Post[]>>(andy.post.getPosts, [], [])\n\n  const deletePost = (postId: number) => {\n    andy.post.deletePost(postId)\n      .then((success: number) => {\n        asyncEffectState.run();\n      });\n  }\n\n  function updatePost(postId: number) {\n  }\n\n  function viewPost(postId: number) {\n    // history.push(pubUrl + \"/post/\" + postId);\n  }\n\n  function confirmDelete(postId: number) {\n    if (window.confirm(\"정말 지우시겠습니까?\")) {\n      deletePost(postId);\n    }\n  }\n\n  if (!asyncEffectState.state) return null;\n  if (asyncEffectState.state.loading) return <div>loading...</div>;\n  if (asyncEffectState.state.error) return <div>error</div>;\n  if (!asyncEffectState.state.data) return null;\n\n  return (\n    <div className=\"List\" css={[styleCss]}>\n      {asyncEffectState.state && asyncEffectState.state.data && asyncEffectState.state.data.map((post: Post, idx: number) => {\n        return (\n          <div className={\"post-item\"}>\n            <div>{post.title}</div>\n            <button onClick={() => {\n              viewPost(post.id);\n            }}>상세 보기\n            </button>\n            <button>수정 하기</button>\n            <button onClick={() => {\n              confirmDelete(post.id);\n            }}>지우기\n            </button>\n          </div>\n        )\n      })}\n    </div>\n  );\n}\n","import React, {useState} from 'react';\nimport Board from \"./Board\";\nimport Main from \"./Main\";\nimport {List} from \"./component/List\";\n\n\nexport interface SideNavProps {\n  children?: JSX.Element\n}\n\nfunction SideNav(props: SideNavProps) {\n  var menus = [\n    {\n      name: \"메인\",\n      component: <Main></Main>\n    },\n    {\n      name: \"게시판\",\n      component: <List></List>\n    }]\n  var [content, setContent]= useState(<Main></Main>);\n  return (\n    <div className=\"SideNav\" style={\n      {\n        display: \"flex\",\n        height: \"100vh\"\n      }\n    }>\n      <div style={\n        {\n          width: \"20%\",\n          padding: \"20px\",\n          borderRight: \"1px solid #f5f5f7\"\n        }\n      }>\n        {menus.map((menu, index: number) => {\n          return <button\n            key={index}\n            onClick={() => {\n              setContent(menu.component)\n            }}\n            style={\n              {\n                marginBottom: \"10px\"\n              }\n            }\n          >{menu.name}</button>\n        })}\n      </div>\n      <div style={\n        {\n          width: \"100%\",\n        }\n      }>\n        <div>\n          {props.children}\n          {content}\n        </div>\n      </div>\n    </div>\n\n\n  );\n}\n\nexport default SideNav;\n","import React from 'react';\n\n\nfunction Header() {\n  return (\n    <div className=\"Header\"\n         style={\n           {\n             width: \"100%\",\n             backgroundColor : \"#f5f5f7\",\n             height: \"100px\"\n           }\n         }>\n      <div >\n          헤더\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport './App.css';\nimport SideNav from \"./SdieNav\";\nimport Content from \"./Content\";\nimport Header from \"./Header\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SideNav>\n        <Header></Header>\n      </SideNav>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}