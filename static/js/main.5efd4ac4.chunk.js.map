{"version":3,"sources":["SdieNav.tsx","Content.tsx","Header.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SideNav","props","className","style","display","height","width","padding","borderRight","map","menu","marginBottom","children","Content","src","Header","backgroundColor","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LA+CeA,MAxCf,SAAiBC,GAKf,OACE,sBAAKC,UAAU,UAAUC,MACvB,CAACC,QAAS,OACRC,OAAQ,SAFZ,UAIE,qBAAKF,MACH,CACEG,MAAO,MACPC,QAAQ,OACRC,YAAa,qBAJjB,SATQ,CACV,qBACA,sBAcWC,KAAI,SAACC,GACV,OAAO,qBAAKP,MACV,CACCQ,aAAc,QAFV,SAIJD,SAGP,qBAAKP,MACH,CACEG,MAAO,QAFX,SAKE,8BACGL,EAAMW,iBC1BFC,MATf,WAEE,OACE,qBAAKX,UAAU,UAAf,SACE,qBAAKY,IAAK,2GCaDC,MAjBf,WACE,OACE,qBAAKb,UAAU,SACVC,MACE,CACEG,MAAO,OACPU,gBAAkB,UAClBX,OAAQ,SALjB,SAQE,kDCISY,MAXf,WACE,OACE,qBAAKf,UAAU,MAAf,SACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,UCGOgB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.5efd4ac4.chunk.js","sourcesContent":["import React from 'react';\n\n\nexport interface SideNavProps {\n  children?: JSX.Element[]\n}\n\nfunction SideNav(props: SideNavProps) {\n  var menus = [\n    \"게시판\",\n    \"방명록\"\n  ]\n  return (\n    <div className=\"SideNav\" style={\n      {display: \"flex\",\n        height :\"100vh\"}\n    }>\n      <div style={\n        {\n          width: \"20%\",\n          padding:\"20px\",\n          borderRight: \"1px solid #f5f5f7\"\n        }\n      }>\n        {menus.map((menu) => {\n          return <div style={\n            {\n             marginBottom: \"10px\"\n            }\n          }>{menu}</div>\n        })}\n      </div>\n      <div style={\n        {\n          width: \"100%\",\n        }\n      }>\n        <div>\n          {props.children}\n        </div>\n      </div>\n    </div>\n\n\n  );\n}\n\nexport default SideNav;\n","import React from 'react';\n\n\nfunction Content() {\n\n  return (\n    <div className=\"Content\">\n      <img src={\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSpDGAPrAz18NxUDtH7JbIQjPt65wA2Cwol1g&usqp=CAU\"}/>\n    </div>\n  );\n}\n\nexport default Content;\n","import React from 'react';\n\n\nfunction Header() {\n  return (\n    <div className=\"Header\"\n         style={\n           {\n             width: \"100%\",\n             backgroundColor : \"#f5f5f7\",\n             height: \"100px\"\n           }\n         }>\n      <div >\n          헤더\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport './App.css';\nimport SideNav from \"./SdieNav\";\nimport Content from \"./Content\";\nimport Header from \"./Header\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SideNav>\n        <Header></Header>\n        <Content></Content>\n      </SideNav>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}